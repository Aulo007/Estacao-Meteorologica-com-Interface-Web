#ifndef PAGINA_H
#define PAGINA_H

const char HTML_PAGINA[] =
"<!DOCTYPE html>"
"<html lang=\"pt-br\">"
"<head>"
"<meta charset=\"UTF-8\">"
"<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">"
"<title>Esta√ß√£o Meteorol√≥gica</title>"
"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js\"></script>"
"<style>"
"body{font-family:Arial,sans-serif;background:#f5f5f5;color:#333;max-width:1000px;margin:10px auto;padding:15px}"
"h1{color:#2c3e50;text-align:center;margin:10px 0}"
".cards{display:grid;grid-template-columns:repeat(auto-fit,minmax(180px,1fr));gap:15px;margin-bottom:20px}"
".card{background:#fff;padding:15px;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.1);text-align:center}"
".card h3{margin:0 0 10px;font-size:0.9em;color:#666}"
".value{font-size:1.8em;font-weight:bold;color:#e74c3c;margin:0}"
".config{background:#fff;padding:15px;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.1);margin-bottom:20px}"
".config h3{margin:0 0 15px;color:#2c3e50}"
".input-group{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:10px;align-items:center}"
".input-group label{font-size:0.9em;color:#666}"
".input-group input{padding:8px;border:1px solid #ddd;border-radius:4px;margin-top:5px;width:90%}"
"button{background:#3498db;color:#fff;border:none;padding:10px 20px;border-radius:4px;cursor:pointer;margin-top:10px}"
"button:hover{background:#2980b9}"
".charts{display:grid;grid-template-columns:1fr 1fr;gap:20px;margin-top:20px}"
".alert{padding:10px;margin:10px 0;border-radius:4px;font-weight:bold;color:#fff;text-align:center}"
".alert.danger{background:#e74c3c}"
".alert.warning{background:#f39c12}"
".alert.success{background:#2ecc71}"
"@media(max-width:768px){.charts{grid-template-columns:1fr}}"
"</style>"
"</head>"
"<body>"
"<h1>üå°Ô∏è Esta√ß√£o Meteorol√≥gica - Pico W</h1>"
"<div id=\"alertas-gerais\"></div>"
"<div class=\"cards\">"
  "<div class=\"card\"><h3>Temperatura (BMP280)</h3><p class=\"value\"><span id=\"temp_bmp\">--</span>¬∞C</p></div>"
  "<div class=\"card\"><h3>Press√£o Corrigida</h3><p class=\"value\"><span id=\"pressao_kpa\">--</span> kPa</p></div>"
  "<div class=\"card\"><h3>Temperatura (AHT20)</h3><p class=\"value\"><span id=\"temp_aht\">--</span>¬∞C</p></div>"
  "<div class=\"card\"><h3>Umidade</h3><p class=\"value\"><span id=\"umidade_aht\">--</span>%</p></div>"
  "<div class=\"card\"><h3>Altitude Estimada</h3><p class=\"value\"><span id=\"altitude\">--</span> m</p></div>"
"</div>"
"<div class=\"config\">"
  "<h3>üõ∞Ô∏è Calibrar Altitude</h3>"
  "<p style=\"font-size:0.8em; color:#666;\">Para calibrar, obtenha a altitude da sua localiza√ß√£o atual no Google Earth e insira no campo abaixo.</p>"
  "<div class=\"input-group\">"
    "<div><label>Altitude (m):</label><input type=\"number\" id=\"altitude_calibrar\" step=\"0.1\"></div>"
    "<button onclick=\"calibrarAltitude()\">‚úîÔ∏è Calibrar</button>"
    "<p style=\"font-size:0.9em;\">Offset de Press√£o: <b id=\"offset_pa\">--</b> Pa</p>"
  "</div>"
"</div>"
"<div class=\"config\">"
  "<h3>‚öôÔ∏è Configura√ß√µes de Limites de Alerta</h3>"
  "<div class=\"input-group\">"
    "<div><label>Press√£o M√≠n (kPa):</label><input type=\"number\" id=\"pmin\" step=\"0.1\"></div>"
    "<div><label>Press√£o M√°x (kPa):</label><input type=\"number\" id=\"pmax\" step=\"0.1\"></div>"
    "<div><label>Umidade M√≠n (%):</label><input type=\"number\" id=\"umin\" step=\"1\"></div>"
    "<div><label>Umidade M√°x (%):</label><input type=\"number\" id=\"umax\" step=\"1\"></div>"
  "</div>"
  "<button onclick=\"salvarLimites()\">üíæ Salvar Limites na Pico</button>"
"</div>"
"<div id=\"alertas-limites\"></div>"
"<div class=\"charts\">"
  "<div class=\"chart\"><h4>üìä Press√£o (kPa)</h4><canvas id=\"pChart\"></canvas></div>"
  "<div class=\"chart\"><h4>üíß Umidade (%)</h4><canvas id=\"uChart\"></canvas></div>"
"</div>"
"<script>"
"let pData=[],uData=[],labels=[];"
"let limitesLocais={pMin:98,pMax:102,uMin:40,uMax:70};"
"let primeiraCarga = true;"

"const pChart=new Chart(document.getElementById('pChart'),{type:'line',data:{labels,datasets:[{data:pData,borderColor:'#3498db',fill:true,tension:0.3}]},options:{plugins:{legend:{display:false}}}});"
"const uChart=new Chart(document.getElementById('uChart'),{type:'line',data:{labels,datasets:[{data:uData,borderColor:'#27ae60',fill:true,tension:0.3}]},options:{plugins:{legend:{display:false}}}});"

"function mostrarAlerta(id, tipo, msg, duracao = 3000) {"
  "const div = document.getElementById(id);"
  "div.innerHTML = `<div class=\"alert ${tipo}\">${msg}</div>`;"
  "setTimeout(() => { div.innerHTML = ''; }, duracao);"
"}"

"function verificarAlertasLimites(d) {"
  "let alertas='';"
  "if(d.pressao_kpa < limitesLocais.pMin || d.pressao_kpa > limitesLocais.pMax) alertas += '<div class=\"alert danger\">‚ö†Ô∏è Press√£o fora do limite! ('+d.pressao_kpa.toFixed(2)+' kPa)</div>';"
  "if(d.umidade_aht < limitesLocais.uMin || d.umidade_aht > limitesLocais.uMax) alertas += '<div class=\"alert warning\">üíß Umidade fora do limite! ('+d.umidade_aht.toFixed(1)+'%)</div>';"
  "document.getElementById('alertas-limites').innerHTML = alertas;"
"}"

"function salvarLimites() {"
  "const pMinValue = parseFloat(document.getElementById('pmin').value);"
  "const pMaxValue = parseFloat(document.getElementById('pmax').value);"
  "const uMinValue = parseFloat(document.getElementById('umin').value);"
  "const uMaxValue = parseFloat(document.getElementById('umax').value);"
  
  "if (pMaxValue < pMinValue || uMaxValue < uMinValue) {"
    "mostrarAlerta('alertas-gerais', 'danger', 'Erro: O valor m√°ximo n√£o pode ser menor que o m√≠nimo.');"
    "return;"
  "}"

  "const data = {pmin: pMinValue, pmax: pMaxValue, umin: uMinValue, umax: uMaxValue};"
  "fetch('/api/limits', { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify(data) })"
  ".then(res => res.json())"
  ".then(data => {"
    "if (data.status === 'ok') {"
      "mostrarAlerta('alertas-gerais', 'success', '‚úÖ Limites salvos na Pico com sucesso!');"
      "limitesLocais = {pMin:pMinValue, pMax:pMaxValue, uMin:uMinValue, uMax:uMaxValue};"
    "} else {"
      "mostrarAlerta('alertas-gerais', 'danger', `‚ùå Erro ao salvar: ${data.msg}`);"
    "}"
  "}).catch(e => mostrarAlerta('alertas-gerais', 'danger', 'Erro de comunica√ß√£o ao salvar limites.'));"
"}"

"function calibrarAltitude() {"
  "const altitude = document.getElementById('altitude_calibrar').value;"
  "if(altitude === '' || isNaN(altitude)) { alert('Por favor, insira um valor de altitude v√°lido.'); return; }"
  "fetch('/api/calibrate', { method: 'POST', headers: {'Content-Type': 'application/json'}, body: JSON.stringify({altitude: parseFloat(altitude)}) })"
  ".then(res => res.json())"
  ".then(data => {"
    "if(data.status === 'ok') mostrarAlerta('alertas-gerais', 'success', '‚úÖ Comando de calibra√ß√£o enviado! O offset ser√° atualizado.');"
    "else mostrarAlerta('alertas-gerais', 'danger', '‚ùå Erro ao enviar calibra√ß√£o.');"
  "});"
"}"

"function atualizarDados() {"
  "fetch('/api/dados').then(r => r.json()).then(d => {"
    "if(!d || d.status !== 'ok') return;"
    "document.getElementById('temp_bmp').innerText = d.temp_bmp.toFixed(1);"
    "document.getElementById('pressao_kpa').innerText = d.pressao_kpa.toFixed(2);"
    "document.getElementById('temp_aht').innerText = d.temp_aht.toFixed(1);"
    "document.getElementById('umidade_aht').innerText = d.umidade_aht.toFixed(1);"
    "document.getElementById('altitude').innerText = d.altitude.toFixed(1);"
    "document.getElementById('offset_pa').innerText = d.offset_pa.toFixed(2);"
    
    "if(primeiraCarga) {"
      "document.getElementById('pmin').value = d.p_min;"
      "document.getElementById('pmax').value = d.p_max;"
      "document.getElementById('umin').value = d.u_min;"
      "document.getElementById('umax').value = d.u_max;"
      "limitesLocais = {pMin: d.p_min, pMax: d.p_max, uMin: d.u_min, uMax: d.u_max};"
      "primeiraCarga = false;"
    "}"

    "verificarAlertasLimites(d);"
    
    "labels.push(new Date().toLocaleTimeString('pt-BR'));"
    "pData.push(d.pressao_kpa);"
    "uData.push(d.umidade_aht);"
    "if(pData.length > 50) { pData.shift(); uData.shift(); labels.shift(); }"
    "pChart.update('none'); uChart.update('none');"
  "}).catch(e => console.error('Erro ao buscar dados:',e));"
"}"

"window.onload = () => { atualizarDados(); setInterval(atualizarDados, 2000); };"
"</script>"
"</body>"
"</html>";

#endif